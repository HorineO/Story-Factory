/* * Basic node styles
 * text-node, chapter-node, generate-node
 * These styles are applied to the nodes in the React Flow diagram.
 */

/* ========================================
 * 基础节点样式模板 - 重构为左右两侧布局
 * 所有节点类型都可以继承这些基础样式
 * ======================================== */

/* 基础节点容器样式 */
.node-base {
    border-radius: 6px;
    box-shadow: 0 3px 8px rgba(0, 0, 0, 0.3);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-size: 12px;
    color: #e0e0e0;
    overflow: hidden;
    min-width: 160px;
    max-width: 280px;
    background-color: #2a2a2a;
    border: 2px solid;
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
}

/* 基础节点头部样式 */
.node-header {
    padding: 6px 8px;
    font-weight: bold;
    color: #ffffff;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 24px;
    background-color: rgba(255, 255, 255, 0.05);
}

/* 基础节点主体样式 - 左右两侧布局 */
.node-body {
    display: flex;
    min-height: 40px;
    background-color: #3c3c3c;
}

/* 左侧内容区域 */
.node-left-content {
    flex: 1;
    padding: 6px;
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    flex-direction: column;
    gap: 3px;
}

/* 右侧内容区域 */
.node-right-content {
    flex: 1;
    padding: 6px;
    display: flex;
    flex-direction: column;
    gap: 3px;
}

/* 单侧内容区域 - 当只有输入或输出时 */
.node-single-content {
    flex: 1;
    padding: 8px;
    display: flex;
    flex-direction: column;
    gap: 3px;
    justify-content: center;
    align-items: center;
}

/* 内容层样式 */
.node-content-layer {
    padding: 4px 6px;
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 3px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    min-height: 18px;
    display: flex;
    align-items: center;
    font-size: 11px;
    color: #b0b0b0;
    transition: all 0.2s ease;
    word-break: break-word;
}

.node-content-layer:hover {
    background-color: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.2);
}

/* 单层内容样式 - 简化显示 */
.node-single-layer {
    padding: 6px 8px;
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 4px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    min-height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 11px;
    color: #b0b0b0;
    text-align: center;
    word-break: break-word;
}

/* 连接点容器 - 与内容层对齐 */
.node-handles-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
}

/* 左侧连接点容器 */
.node-left-handles {
    position: absolute;
    left: -4px;
    top: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    pointer-events: none;
}

/* 右侧连接点容器 */
.node-right-handles {
    position: absolute;
    right: -4px;
    top: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    pointer-events: none;
}

/* 基础节点文本样式 */
.node-text {
    font-size: 10px;
    color: #b0b0b0;
    word-break: break-word;
    text-align: center;
}

/* ========================================
 * 节点类型样式 - 使用CSS变量实现主题化
 * ======================================== */

/* 文本节点 */
.text-node {
    --node-border-color: #17a2b8;
    --node-header-bg: #17a2b8;
    --node-type: 'text';
}

.text-node .node-header {
    background-color: var(--node-header-bg);
}

/* 章节节点 */
.chapter-node {
    --node-border-color: #6f42c1;
    --node-header-bg: #6f42c1;
    --node-type: 'chapter';
}

.chapter-node .node-header {
    background-color: var(--node-header-bg);
}

/* 生成节点 */
.generate-node {
    --node-border-color: #ffc107;
    --node-header-bg: #ffc107;
    --node-type: 'generate';
}

.generate-node .node-header {
    background-color: var(--node-header-bg);
}

/* 开始节点 */
.start-node {
    --node-border-color: #28a745;
    --node-header-bg: #28a745;
    --node-type: 'start';
}

.start-node .node-header {
    background-color: var(--node-header-bg);
}

/* 结束节点 */
.end-node {
    --node-border-color: #dc3545;
    --node-header-bg: #dc3545;
    --node-type: 'end';
}

.end-node .node-header {
    background-color: var(--node-header-bg);
}

/* ========================================
 * 应用边框颜色到所有节点类型
 * ======================================== */
.text-node,
.chapter-node,
.generate-node,
.start-node,
.end-node {
    border-color: var(--node-border-color);
}

/* ========================================
 * 连接点样式 - 重构为与内容层对齐
 * ======================================== */
.react-flow__handle {
    width: 10px;
    height: 10px;
    background: #555;
    border: 2px solid #888;
    border-radius: 50%;
    transform: none;
    transition: all 0.2s ease;
    pointer-events: all;
    position: relative;
    z-index: 10;
}

.react-flow__handle:hover {
    background: #777;
    border-color: #999;
    transform: scale(1.2);
}

.react-flow__handle-left {
    left: -5px;
}

.react-flow__handle-right {
    right: -5px;
}

.react-flow__handle-top {
    top: -5px;
}

.react-flow__handle-bottom {
    bottom: -5px;
}

/* 连接点标签样式 */
.handle-label {
    position: absolute;
    font-size: 9px;
    color: #888;
    white-space: nowrap;
    pointer-events: none;
}

.handle-label-left {
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
}

.handle-label-right {
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
}

/* ========================================
 * 节点状态样式
 * ======================================== */

.react-flow__node:hover {
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
    transform: translateY(-2px);
}

/* ========================================
 * 响应式设计
 * ======================================== */
@media (max-width: 768px) {
    .node-base {
        font-size: 11px;
        min-width: 140px;
        max-width: 240px;
    }

    .node-header {
        padding: 4px 6px;
        min-height: 20px;
    }

    .node-body {
        min-height: 35px;
    }

    .node-content-layer {
        padding: 3px 4px;
        font-size: 10px;
        min-height: 16px;
    }

    .node-single-layer {
        padding: 4px 6px;
        font-size: 10px;
        min-height: 18px;
    }
}

/* ========================================
 * 动画效果
 * ======================================== */
@keyframes nodeAppear {
    from {
        opacity: 0;
        transform: scale(0.8) translateY(10px);
    }

    to {
        opacity: 1;
        transform: scale(1) translateY(0);
    }
}

.node-base {
    animation: nodeAppear 0.3s ease-out;
}

/* ========================================
 * 节点尺寸变体
 * ======================================== */
.node-compact {
    min-width: 120px;
    max-width: 200px;
}

.node-large {
    min-width: 200px;
    max-width: 350px;
}

.node-rounded {
    border-radius: 12px;
}

.node-flat {
    box-shadow: none;
    border: 1px solid;
}